Signals are the interrupts which are delivered to a process by the operating system to stop its ongoing task and attend the task for which the interrupt has been generated.

Signals can also be generated by the operating system on the basis of system or error condition.

You can generate interrupts by pressing Ctrl+ C on Linux, UNIX, Mac OS X, or Windows system.


------------------------------------
Signals 	Description
SIGABRT 	(Signal Abort) Abnormal termination of the program, such as a call to abort.
SIGFPE 	(Signal floating- point exception) An erroneous arithmetic operation, such as a divide by zero or an operation resulting in overflow.
SIGILL 	(Signal Illegal Instruction) It is used for detecting an illegal instruction.
SIGINT 	(Signal Interrupt) It is used to receipt an interactive program interrupt signal.
SIGSEGV 	(Signal segmentation Violation) An invalid access to storage.
SIGTERM 	(Signal Termination) A termination request sent to the program.
SIGHUP 	(Signal Hang up) Hang Up (POSIX), its report that user's terminal is disconnected. It is used to report the termination of the controlling process.
SIGQUIT 	Used to terminate a process and generate a core dump.
SIGTRAP 	Trace trap.
SIGBUS 	This is a BUS error which indicates an access to an invalid address.
SIGUSR1 	User defined signal 1.
SIGUSR2 	User defined signal 2.
SIGALRM 	Alarm clock, which indicates an access to an invalid address.
SIGTERM 	Used for termination. This signal can be blocked, handled, and ignored. Generated by kill command.
SIGCOUNT 	This signal sent to process to make it continue.
SIGSTOP 	Stop, unblockable. This signal is used to stop a process. This signal cannot be handled, ignored or blocked.

